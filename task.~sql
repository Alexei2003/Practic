-- TASK 1
SELECT 
  STD_CHILD.ID AS REPORT_CARD_NUMBER, 
  STD_CHILD.SURNAME, 
  STD_CHILD.NAME, 
  STD_CHILD.PATRONYMIC,
  
  STD_PAYER.SURNAME AS PAYER_SURNAME, 
  STD_PAYER.NAME AS PAYER_NAME, 
  STD_PAYER.PATRONYMIC AS PAYER_PATRONYMIC,
  
  STD_GROUP.NAME AS GROUP_NAME,
  
  STD_GROUP_TYPE.NAME AS GROUP_TYPE,
  
  STD_GENERAL_MONTH.BALANCE,
  STD_GENERAL_MONTH.EXEMPTION,
  STD_GENERAL_MONTH.PRICE

FROM STD_CHILD
INNER JOIN STD_PAYER_AND_CHILD ON STD_PAYER_AND_CHILD.CHILD_ID = STD_CHILD.ID
INNER JOIN STD_PAYER ON STD_PAYER_AND_CHILD.PAYER_ID = STD_PAYER.ID
INNER JOIN STD_CHILD_AND_GROUP ON STD_CHILD_AND_GROUP.CHILD_ID = STD_CHILD.ID
INNER JOIN STD_GROUP ON STD_CHILD_AND_GROUP.GROUP_ID = STD_GROUP.ID
INNER JOIN STD_GROUP_AND_GROUP_TYPE ON STD_GROUP_AND_GROUP_TYPE.GROUP_ID = STD_GROUP.ID
INNER JOIN STD_GROUP_TYPE ON STD_GROUP_AND_GROUP_TYPE.GROUP_TYPE_ID = STD_GROUP_TYPE.ID
LEFT JOIN STD_GENERAL_MONTH ON STD_GENERAL_MONTH.CHILD_ID = STD_CHILD.ID
WHERE 
  TO_DATE('01-09-2023', 'DD-MM-YYYY') BETWEEN STD_PAYER_AND_CHILD.BEGIN AND NVL(STD_PAYER_AND_CHILD.END, TO_DATE('31-12-9999', 'DD-MM-YYYY')) AND
  TO_DATE('01-09-2023', 'DD-MM-YYYY') BETWEEN STD_CHILD_AND_GROUP.BEGIN AND NVL(STD_CHILD_AND_GROUP.END, TO_DATE('31-12-9999', 'DD-MM-YYYY')) AND
  TO_DATE('01-09-2023', 'DD-MM-YYYY') BETWEEN STD_GROUP_AND_GROUP_TYPE.BEGIN AND NVL(STD_GROUP_AND_GROUP_TYPE.END, TO_DATE('31-12-9999', 'DD-MM-YYYY')) AND
  TO_DATE('09-2023', 'MM-YYYY') = STD_GENERAL_MONTH.MONTH
ORDER BY REPORT_CARD_NUMBER;

-- TASK 2
SELECT 
  STD_GROUP.NAME,
  STD_CHILD.SURNAME, 
  STD_CHILD.NAME, 
  STD_CHILD.PATRONYMIC
FROM STD_CHILD
INNER JOIN STD_CHILD_AND_GROUP ON STD_CHILD_AND_GROUP.CHILD_ID = STD_CHILD.ID
INNER JOIN STD_GROUP ON STD_CHILD_AND_GROUP.GROUP_ID = STD_GROUP.ID
WHERE TO_DATE('01-09-2023', 'DD-MM-YYYY') BETWEEN STD_CHILD_AND_GROUP.BEGIN AND NVL(STD_CHILD_AND_GROUP.END, TO_DATE('31-12-9999', 'DD-MM-YYYY'))
ORDER BY STD_GROUP.NAME; 

-- TASK 3
SELECT 
   STD_GROUP.NAME,
   
   STD_GROUP_TYPE.NAME,
   
   STD_RATE.PRICE_DAY
FROM STD_GROUP
INNER JOIN STD_GROUP_AND_GROUP_TYPE ON STD_GROUP_AND_GROUP_TYPE.GROUP_ID = STD_GROUP.ID
INNER JOIN STD_GROUP_TYPE ON STD_GROUP_AND_GROUP_TYPE.GROUP_TYPE_ID = STD_GROUP_TYPE.ID
INNER JOIN STD_RATE ON STD_GROUP_AND_GROUP_TYPE.GROUP_TYPE_ID = STD_RATE.GROUP_TYPE_ID
WHERE TO_DATE('01-09-2023', 'DD-MM-YYYY') BETWEEN STD_GROUP_AND_GROUP_TYPE.BEGIN AND NVL(STD_GROUP_AND_GROUP_TYPE.END, TO_DATE('31-12-9999', 'DD-MM-YYYY')) AND
      TO_DATE('01-09-2023', 'DD-MM-YYYY') BETWEEN STD_RATE.BEGIN AND NVL(STD_RATE.END, TO_DATE('31-12-9999', 'DD-MM-YYYY'))
ORDER BY STD_GROUP.NAME;  

-- TASK 4
SELECT 
  REPORT_CARD_NUMBER,
  SURNAME, 
  NAME, 
  PATRONYMIC,
    
  "01",
  "02",
  "03",
  "04",
  "05",
  "06",
  "07",
  "08",
  "09",
  "10",
  "11",
  "12",
  "13",
  "14",
  "15",
  "16",
  "17",
  "18",
  "19",
  "20",
  "21",
  "22",
  "23",
  "24",
  "25",
  "26",
  "27",
  "28",
  "29",
  "30",
  "31",
      
  COUNT_VISITED
FROM
(
  SELECT 
    STD_DAY.CHILD_ID AS REPORT_CARD_NUMBER,
    STD_CHILD.SURNAME, 
    STD_CHILD.NAME, 
    STD_CHILD.PATRONYMIC,
       
    TO_CHAR(STD_DAY.DAY_DATE, 'DD') AS DAY_NUMBER,
      
    STD_DAY_TYPE.TYPE AS DAY_TYPE

  FROM STD_CHILD
  INNER JOIN STD_DAY ON STD_DAY.CHILD_ID = STD_CHILD.ID
  INNER JOIN STD_DAY_TYPE ON STD_DAY.DAY_TYPE_ID = STD_DAY_TYPE.ID
  WHERE STD_DAY.DAY_DATE BETWEEN TO_DATE('01-09-2023', 'DD-MM-YYYY') AND TO_DATE('01-10-2023', 'DD-MM-YYYY')
    
  UNION
    
  SELECT 
    999999999 AS CHILD_ID,
    NULL AS SURNAME, 
    NULL AS NAME, 
    CAST('¬—≈√Œ œŒ “¿¡≈Àﬁ' AS NVARCHAR2(30))  AS PATRONYMIC,
       
    TO_CHAR(STD_DAY.DAY_DATE, 'DD') AS DAY_NUMBER,
      
    NVL(CAST(COUNT(STD_DAY.DAY_DATE) AS NVARCHAR2(5)), '0') AS TYPE

  FROM STD_DAY
  WHERE STD_DAY.DAY_TYPE_ID = 1 AND STD_DAY.DAY_DATE BETWEEN TO_DATE('01-09-2023', 'DD-MM-YYYY') AND TO_DATE('01-10-2023', 'DD-MM-YYYY')
  GROUP BY STD_DAY.DAY_DATE
)
PIVOT
(
  MAX(DAY_TYPE)
  FOR DAY_NUMBER 
  IN 
  (
    '01' AS "01", 
    '02' AS "02",
    '03' AS "03",
    '04' AS "04",
    '05' AS "05",
    '06' AS "06",
    '07' AS "07",
    '08' AS "08",
    '09' AS "09",
    '10' AS "10",
    '11' AS "11",
    '12' AS "12",
    '13' AS "13",
    '14' AS "14",
    '15' AS "15",
    '16' AS "16",
    '17' AS "17",
    '18' AS "18",
    '19' AS "19",
    '20' AS "20",
    '21' AS "21",
    '22' AS "22",
    '23' AS "23",
    '24' AS "24",
    '25' AS "25",
    '26' AS "26",
    '27' AS "27",
    '28' AS "28",
    '29' AS "29",
    '30' AS "30",
    '31' AS "31"
  )
)
INNER JOIN 
( 
  SELECT
    STD_DAY.CHILD_ID AS REPORT_CARD,
    COUNT(STD_DAY.DAY_DATE) AS COUNT_VISITED
  FROM STD_DAY
  WHERE STD_DAY.DAY_TYPE_ID = 1 AND STD_DAY.DAY_DATE BETWEEN TO_DATE('01-09-2023', 'DD-MM-YYYY') AND TO_DATE('01-10-2023', 'DD-MM-YYYY')
  GROUP BY
    STD_DAY.CHILD_ID
      
  UNION
    
  SELECT
    999999999 AS CHILD_ID,
    COUNT(STD_DAY.DAY_DATE) AS COUNT_VISITED
  FROM STD_DAY
  WHERE STD_DAY.DAY_TYPE_ID = 1 AND STD_DAY.DAY_DATE BETWEEN TO_DATE('01-09-2023', 'DD-MM-YYYY') AND TO_DATE('01-10-2023', 'DD-MM-YYYY')
      
) STD_COUNT_VISITED ON STD_COUNT_VISITED.REPORT_CARD = REPORT_CARD_NUMBER

ORDER BY SURNAME

-- TASK 5
SELECT
  STD_GROUP.NAME,
  
  STD_GROUP_TYPE.NAME AS GROUP_TYPE,
  
  COUNT(STD_CHILD_AND_GROUP.CHILD_ID) AS COUNT_CHILDREN,
  
  COUNT(STD_DAY.DAY_DATE) AS COUNT_VISITED_IN_MONTH
  
FROM STD_GROUP
INNER JOIN STD_GROUP_AND_GROUP_TYPE ON STD_GROUP_AND_GROUP_TYPE.GROUP_ID = STD_GROUP.ID
INNER JOIN STD_GROUP_TYPE ON STD_GROUP_AND_GROUP_TYPE.GROUP_TYPE_ID = STD_GROUP_TYPE.ID
INNER JOIN STD_CHILD_AND_GROUP ON STD_CHILD_AND_GROUP.GROUP_ID = STD_GROUP.ID
INNER JOIN STD_DAY ON STD_CHILD_AND_GROUP.CHILD_ID = STD_DAY.CHILD_ID
WHERE TO_DATE('01-09-2023', 'DD-MM-YYYY') BETWEEN STD_CHILD_AND_GROUP.BEGIN AND NVL(STD_CHILD_AND_GROUP.END, TO_DATE('31-12-9999', 'DD-MM-YYYY')) AND
      TO_DATE('01-09-2023', 'DD-MM-YYYY') BETWEEN STD_GROUP_AND_GROUP_TYPE.BEGIN AND NVL(STD_GROUP_AND_GROUP_TYPE.END, TO_DATE('31-12-9999', 'DD-MM-YYYY')) AND
      STD_DAY.DAY_DATE BETWEEN TO_DATE('01-09-2023', 'DD-MM-YYYY') AND TO_DATE('01-10-2023', 'DD-MM-YYYY') AND STD_DAY.DAY_TYPE_ID = 1
      
GROUP BY 
  STD_GROUP.NAME,
  STD_GROUP_TYPE.NAME
      
ORDER BY STD_GROUP.NAME;

-- GROUP-VISITED-DAYS
SELECT
  STD_GROUP.NAME,

  COUNT(STD_DAY.DAY_DATE) AS COUNT_VISITED,
  
  STD_DAY.DAY_DATE 
FROM STD_GROUP
INNER JOIN STD_CHILD_AND_GROUP ON STD_CHILD_AND_GROUP.GROUP_ID = STD_GROUP.ID
INNER JOIN STD_DAY ON STD_DAY.CHILD_ID = STD_CHILD_AND_GROUP.CHILD_ID
WHERE TO_DATE('01-09-2023', 'DD-MM-YYYY') BETWEEN STD_CHILD_AND_GROUP.BEGIN AND NVL(STD_CHILD_AND_GROUP.END, TO_DATE('31-12-9999', 'DD-MM-YYYY')) AND
      STD_DAY.DAY_DATE BETWEEN TO_DATE('01-09-2023', 'DD-MM-YYYY') AND TO_DATE('01-10-2023', 'DD-MM-YYYY') AND
      STD_DAY.DAY_TYPE_ID = 1
GROUP BY 
  STD_GROUP.NAME,
  STD_DAY.DAY_DATE

ORDER BY STD_DAY.DAY_DATE;

-- VISITED-DAYS
SELECT
  STD_DAY.DAY_DATE,

  COUNT(STD_DAY.DAY_DATE) AS COUNT_VISITED
FROM STD_GROUP
INNER JOIN STD_CHILD_AND_GROUP ON STD_CHILD_AND_GROUP.GROUP_ID = STD_GROUP.ID
INNER JOIN STD_DAY ON STD_DAY.CHILD_ID = STD_CHILD_AND_GROUP.CHILD_ID
WHERE TO_DATE('01-09-2023', 'DD-MM-YYYY') BETWEEN STD_CHILD_AND_GROUP.BEGIN AND NVL(STD_CHILD_AND_GROUP.END, TO_DATE('31-12-9999', 'DD-MM-YYYY')) AND
      STD_DAY.DAY_DATE BETWEEN TO_DATE('01-09-2023', 'DD-MM-YYYY') AND TO_DATE('01-10-2023', 'DD-MM-YYYY') AND
      STD_DAY.DAY_TYPE_ID = 1
GROUP BY 
  STD_DAY.DAY_DATE

ORDER BY STD_DAY.DAY_DATE;

-- VISITED-DAYS-GROUP_TYPE
SELECT
  STD_DAY.DAY_DATE,

  COUNT(STD_DAY.DAY_DATE) AS COUNT_VISITED
FROM STD_GROUP
INNER JOIN STD_CHILD_AND_GROUP ON STD_CHILD_AND_GROUP.GROUP_ID = STD_GROUP.ID
INNER JOIN STD_DAY ON STD_DAY.CHILD_ID = STD_CHILD_AND_GROUP.CHILD_ID
INNER JOIN STD_GROUP_AND_GROUP_TYPE ON STD_GROUP_AND_GROUP_TYPE.GROUP_ID = STD_GROUP.ID
WHERE TO_DATE('01-09-2023', 'DD-MM-YYYY') BETWEEN STD_CHILD_AND_GROUP.BEGIN AND NVL(STD_CHILD_AND_GROUP.END, TO_DATE('31-12-9999', 'DD-MM-YYYY')) AND
      STD_DAY.DAY_DATE BETWEEN TO_DATE('01-09-2023', 'DD-MM-YYYY') AND TO_DATE('01-10-2023', 'DD-MM-YYYY') AND
      STD_DAY.DAY_TYPE_ID = 1 AND STD_GROUP_AND_GROUP_TYPE.GROUP_TYPE_ID = 1
GROUP BY 
  STD_DAY.DAY_DATE

ORDER BY STD_DAY.DAY_DATE;
